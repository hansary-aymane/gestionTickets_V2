{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CinemaService {\n  constructor(http) {\n    this.http = http;\n    this.host = \"http://localhost:8080\";\n  }\n  getVilles() {\n    console.log(\"###############ngoninit getVille\");\n    return this.http.get(this.host + \"/villes\");\n  }\n  // @ts-ignore\n  getCinemas(v) {\n    return this.http.get(v._links.cinemas.href);\n  }\n  // @ts-ignore\n  getSalles(c) {\n    return this.http.get(c._links.salles.href);\n  }\n  // @ts-ignore\n  getProjections(salle) {\n    let url = salle._links.projections.href.replace(\"{?projection}\", \"\");\n    return this.http.get(url + \"?projection=p1\");\n  }\n  // @ts-ignore\n  getTicketsPlaces(p) {\n    let url = p._links.tickets.href.replace(\"{?projection}\", \"\");\n    return this.http.get(url + \"?projection=ticketProj\");\n  }\n  // @ts-ignore\n  payerTickets(formulaire) {\n    return this.http.post(this.host + \"/payerTickets\", formulaire);\n  }\n}\nCinemaService.ɵfac = function CinemaService_Factory(t) {\n  return new (t || CinemaService)(i0.ɵɵinject(i1.HttpClient));\n};\nCinemaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CinemaService,\n  factory: CinemaService.ɵfac,\n  providedIn: 'root'\n});\nexport { CinemaService };","map":{"version":3,"names":["CinemaService","constructor","http","host","getVilles","console","log","get","getCinemas","v","_links","cinemas","href","getSalles","c","salles","getProjections","salle","url","projections","replace","getTicketsPlaces","p","tickets","payerTickets","formulaire","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ayman\\OneDrive\\Bureau\\JEE Project\\GestionTickets\\FrontEnd\\src\\app\\services\\cinema.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CinemaService {\r\n\r\n  public host:string=\"http://localhost:8080\"\r\n  constructor(private http:HttpClient) { }\r\n  public getVilles(){\r\n    console.log(\"###############ngoninit getVille\")\r\n    return this.http.get(this.host+\"/villes\");\r\n  }\r\n\r\n  // @ts-ignore\r\n  getCinemas(v) {\r\n    return this.http.get(v._links.cinemas.href);\r\n  }\r\n\r\n  // @ts-ignore\r\n  getSalles(c) {\r\n    return this.http.get(c._links.salles.href);\r\n  }\r\n  // @ts-ignore\r\n  getProjections(salle) {\r\n    let url = salle._links.projections.href.replace(\"{?projection}\",\"\");\r\n    return this.http.get(url+\"?projection=p1\");\r\n  }\r\n\r\n  // @ts-ignore\r\n\r\n  getTicketsPlaces(p) {\r\n    let url = p._links.tickets.href.replace(\"{?projection}\",\"\");\r\n    return this.http.get(url+\"?projection=ticketProj\");\r\n  }\r\n\r\n  // @ts-ignore\r\n  payerTickets(formulaire) {\r\n    return this.http.post(this.host+\"/payerTickets\",formulaire);\r\n  }\r\n}\r\n"],"mappings":";;AAGA,MAGaA,aAAa;EAGxBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADjB,KAAAC,IAAI,GAAQ,uBAAuB;EACH;EAChCC,SAASA,CAAA;IACdC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,IAAI,GAAC,SAAS,CAAC;EAC3C;EAEA;EACAK,UAAUA,CAACC,CAAC;IACV,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAACE,CAAC,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC;EAC7C;EAEA;EACAC,SAASA,CAACC,CAAC;IACT,OAAO,IAAI,CAACZ,IAAI,CAACK,GAAG,CAACO,CAAC,CAACJ,MAAM,CAACK,MAAM,CAACH,IAAI,CAAC;EAC5C;EACA;EACAI,cAAcA,CAACC,KAAK;IAClB,IAAIC,GAAG,GAAGD,KAAK,CAACP,MAAM,CAACS,WAAW,CAACP,IAAI,CAACQ,OAAO,CAAC,eAAe,EAAC,EAAE,CAAC;IACnE,OAAO,IAAI,CAAClB,IAAI,CAACK,GAAG,CAACW,GAAG,GAAC,gBAAgB,CAAC;EAC5C;EAEA;EAEAG,gBAAgBA,CAACC,CAAC;IAChB,IAAIJ,GAAG,GAAGI,CAAC,CAACZ,MAAM,CAACa,OAAO,CAACX,IAAI,CAACQ,OAAO,CAAC,eAAe,EAAC,EAAE,CAAC;IAC3D,OAAO,IAAI,CAAClB,IAAI,CAACK,GAAG,CAACW,GAAG,GAAC,wBAAwB,CAAC;EACpD;EAEA;EACAM,YAAYA,CAACC,UAAU;IACrB,OAAO,IAAI,CAACvB,IAAI,CAACwB,IAAI,CAAC,IAAI,CAACvB,IAAI,GAAC,eAAe,EAACsB,UAAU,CAAC;EAC7D;;AAlCWzB,aAAa,C;mBAAbA,aAAa,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAb9B,aAAa,C;SAAbA,aAAa;EAAA+B,OAAA,EAAb/B,aAAa,CAAAgC,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPjC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}